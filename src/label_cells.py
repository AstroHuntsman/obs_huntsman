from pylab import *
from numpy import *

from scipy.ndimage.measurements import *

# data file generated by ./Deblender
# defines: "cellids", "phcellids"
from tst import *

cellids   = array(cellids)
phcellids = array(phcellids)

def show_ids(ids):
	imshow(ids, interpolation='nearest', origin='lower')
	for x in unique(ids):
		if x < 0:
			continue
		(L,n) = label(ids == x)
		#print 'n', n, unique(L)
		for y in range(1,n+1):
			cm = center_of_mass(L == y)
			text(cm[0], cm[1], '%i' % x,
				 horizontalalignment='center',
				 verticalalignment='center',
				 bbox=dict(facecolor='white', alpha=0.5))
		# there can be multiple blobs with the same id...
		#cm = center_of_mass(ids == x)
		#print 'id', x, 'cm', cm
		#text(cm[0], cm[1], '%i' % x, horizontalalignment='center',
        #     verticalalignment='center', bbox=dict(facecolor='white', alpha=0.5))
		
if __name__ == '__main__':
	clf()
	errorbar(range(len(celldata)), celldata, yerr=cellsigma, fmt='r.',
			 ecolor='r')
	plot(cellmodel2, 'b.')
	savefig('cellvals.png')


	clf()
	show_ids(phcellids)
	colorbar()
	savefig('phcells.png')

	clf()
	show_ids(cellids)
	colorbar()
	savefig('cells.png')

	NY,NX = cellids.shape
	N = 5
	ylo,yhi = NY/2 - N, NY/2 + N + 1
	xlo,xhi = NX/2 - N, NX/2 + N + 1

	clf()
	show_ids(phcellids[ylo:yhi,xlo:xhi])
	colorbar()
	savefig('phcells-zoom.png')

	clf()
	show_ids(cellids[ylo:yhi,xlo:xhi])
	colorbar()
	savefig('cells-zoom.png')

	
