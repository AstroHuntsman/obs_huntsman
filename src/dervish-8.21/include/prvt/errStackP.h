#ifndef _ERRSTACKP_H
#define _ERRSTACKP_H

/*****************************************************************************
******************************************************************************
**
** FILE:
**      errStackP.h
**
** ABSTRACT:
**    This is the PRIVATE region for the data structures associated with the
**    Error Stack package.
**
**               PLEASE DO NOT EDIT THIS FILE DIRECTLY 
**
** ENVIRONMENT:
**      ANSI C.
**
** AUTHOR:
**      Creation date: May 07, 1993
**      VKG
**
** MODIFICATIONS:
**
******************************************************************************
******************************************************************************
*/

#include "shCErrStack.h"

/*----------------------------------------------------------------------------
**
** DEFINITIONS
*/
#define MAX_DEPTH  20          /* error stack at least this many levels deep */
#define MAX_COLS   132         /* Maximum columns per error line */


/*----------------------------------------------------------------------------
**
** Our error stack data structure and related definitions.
**
** NOTE:  Although the error stack is a private structure, it is made global
**        (not just static global to the errStack.c module).  This is only a
**        protectionary step to prevent multiple modules from including this
**        file and declaring their own private copies of the error stack while
**        thinking they are working on the same copy.  This should never occur,
**        as only errStack.c should be operating directly on the stack, but you
**        never know.
**
**        Also, only one module (errStack.c) should define ERRSTACK_IMP to
**        declare the error stack and initialize it.  Without ERRSTACK_IMP,
**        the error stack is declared external.
*/

#ifdef __cplusplus
extern "C"
{
#endif  /* ifdef cpluplus */

#if (!defined (ERRSTACK_IMP))
extern
#endif
struct
   {
   int flags;		  /* Behaviour controlling flags */
   int numItems;          /* Number of items in stack (could be >= MAX_DEPTH) */

   char stack[MAX_DEPTH][MAX_COLS];
   }		errStack
#if ( defined (ERRSTACK_IMP))
                         = { (shErrStack_ClearOnPush), 0 }
#endif
                                                         ;

#ifdef __cplusplus
}
#endif  /* ifdef cpluplus */

#endif
